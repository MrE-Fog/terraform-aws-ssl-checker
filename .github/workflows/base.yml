name: 'base'

on:
  push:
    tags: [ v* ]
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tflint:
    name: TFLint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: TFLint
        run: |
          curl https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint

  fmt:
    name: fmt
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@master
      - run: terraform fmt --recursive -check=true

  validate:
    name: validate
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@master
      - name: terraform validate
        run: |
          terraform init -backend=false
          terraform validate -no-color -var 'host_dns_name="fivexl.io"' -var 'slack_hook_url=""'
        env:
          AWS_DEFAULT_REGION: "eu-central-1"

  tfsec:
    name: TFSec
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: TFSec
        uses: triat/terraform-security-scan@v3.0.0
        with:
          tfsec_actions_comment: false

  python-check:
    name: Python Check
    runs-on: ubuntu-20.04
    container:
      image: python:3.8-slim-buster
    steps:
      - uses: actions/checkout@master
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8 pytest bandit
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true
      - name: Security check with Bandit
        run: |
          bandit -r .
        continue-on-error: true
      - name: Run Code
        run: |
          python3 ssl-check-to-slack.py
        env:
          HOOK_URL: "https://hooks.slack.com/services/XXXXXXX/XXXXXXX/XXXXXXXXXXXX"
          HOSTNAMES: "fivexl.io"
          HEALTH_CHECK_MATCHER: "200-399"
